import { z } from "zod";

type EventName = "started" | "ended";

const Z_event_type = z.union([
  z
    .literal("intrinsic-thought")
    .describe("The reasoning tokens generated by the model"),
  z
    .literal("reflective-thought")
    .describe(
      "The reasoning tokens generated by external tool calls. A thought generated to reflect after an action.",
    ),
  z
    .literal("planning-thought")
    .describe("The thought generated to plan an action."),
]);

const Z_event = z.object({
  event_name: z.enum(["started", "ended"]),
  event_type: Z_event_type,
  content: z.string().optional(),
});

type Event = z.infer<typeof Z_event>;

const prompt = "";

const messageTimeline: Event[] = [
  {
    event_name: "started",
    event_type: "intrinsic-thought",
    content: "",
  },
];
